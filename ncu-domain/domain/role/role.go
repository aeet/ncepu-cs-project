// Code generated by ent, DO NOT EDIT.

package role

const (
	// Label holds the string label denoting the role type in the database.
	Label = "role"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRoleName holds the string denoting the role_name field in the database.
	FieldRoleName = "role_name"
	// FieldRoleValue holds the string denoting the role_value field in the database.
	FieldRoleValue = "role_value"
	// EdgeResource holds the string denoting the resource edge name in mutations.
	EdgeResource = "resource"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the role in the database.
	Table = "roles"
	// ResourceTable is the table that holds the resource relation/edge. The primary key declared below.
	ResourceTable = "role_resource"
	// ResourceInverseTable is the table name for the Resource entity.
	// It exists in this package in order to avoid circular dependency with the "resource" package.
	ResourceInverseTable = "resources"
	// UserTable is the table that holds the user relation/edge. The primary key declared below.
	UserTable = "user_role"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
)

// Columns holds all SQL columns for role fields.
var Columns = []string{
	FieldID,
	FieldRoleName,
	FieldRoleValue,
}

var (
	// ResourcePrimaryKey and ResourceColumn2 are the table columns denoting the
	// primary key for the resource relation (M2M).
	ResourcePrimaryKey = []string{"role_id", "resource_id"}
	// UserPrimaryKey and UserColumn2 are the table columns denoting the
	// primary key for the user relation (M2M).
	UserPrimaryKey = []string{"user_id", "role_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// RoleNameValidator is a validator for the "role_name" field. It is called by the builders before save.
	RoleNameValidator func(string) error
	// RoleValueValidator is a validator for the "role_value" field. It is called by the builders before save.
	RoleValueValidator func(string) error
)
